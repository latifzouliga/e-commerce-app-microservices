version: '3.8'

services:
  postgresql:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - microservices-net
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net

  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=zouliga
      - MONGO_INITDB_ROOT_PASSWORD=zouliga
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "mongo --username zouliga --password zouliga --authenticationDatabase admin --eval 'db.adminCommand(\"ping\")'"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=zouliga
      - ME_CONFIG_MONGODB_ADMINPASSWORD=zouliga
      - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
      - microservices-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net

  mail-dev:
    container_name: ms-mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025
    networks:
      - microservices-net

  keycloak:
    container_name: ms_keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    ports:
      - 9098:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    networks:
      - microservices-net
    command:
      - "start-dev"




        
#=======================================================================================================================
  config-server:
    image: com.zouliga/config-server:0.0.1-SNAPSHOT
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - microservices-net

  discovery-service:
    image: ${GROUP_ID:-default_group_id}/discovery-service:${SERVICE_VERSION:-latest}
    container_name: discovery-service
    ports:
      - "8761:8761"
    networks:
      - microservices-net

  gateway-service:
    image: ${GROUP_ID:-default_group_id}/gateway-service:${SERVICE_VERSION:-latest}
    container_name: gateway-service
    environment:
      - PROFILE=dev
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx1g
    depends_on:
      - config-server
      - discovery-service
      - customer-service
      - product-service
      - order-service
      - payment-service
      - notification-service
    ports:
      - "8222:8222"
    networks:
      - microservices-net

  product-service:
    image: ${GROUP_ID:-default_group_id}/product-service:${SERVICE_VERSION:-latest}
    container_name: project-service
    environment:
      - PROFILE=dev
      - CONFIGSERVER_URI=http://configserver:8888
      - CONFIGSERVER_PORT=8888
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx1g
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/product
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
    depends_on:
      - postgresql
      - config-server
    ports:
      - "8050:8050"
    networks:
      - microservices-net

  customer-service:
    image: ${GROUP_ID:-default_group_id}/customer-service:${SERVICE_VERSION:-latest}
    container_name: customer-service
    environment:
      - PROFILE=dev
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx1g
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=mongodb
      - SPRING_DATA_MONGODB_USERNAME=zouliga
      - SPRING_DATA_MONGODB_PASSWORD=zouliga
    depends_on:
      - mongodb
      - discovery-service
      - config-server
    ports:
      - "8090:8090"
    networks:
      - microservices-net

  order-service:
    image: ${GROUP_ID:-default_group_id}/order-service:${SERVICE_VERSION:-latest}
    container_name: order-service
    environment:
      - PROFILE=dev
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx1g
    ports:
      - "8070:8070"
    networks:
      - microservices-net
    depends_on:
      - config-server

  payment-service:
    image: ${GROUP_ID:-default_group_id}/payment-service:${SERVICE_VERSION:-latest}
    container_name: payment-service
    environment:
      - PROFILE=dev
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx1g
    ports:
      - "8060:8060"
    networks:
      - microservices-net
    depends_on:
      - config-server

  notification-service:
    image: ${GROUP_ID:-default_group_id}/notification-service:${SERVICE_VERSION:-latest}
    container_name: notification-service
    environment:
      - PROFILE=dev
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx1g
    ports:
      - "8040:8040"
    networks:
      - microservices-net
    depends_on:
      - config-server

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo:
